type key = { int<32> int_ip; int<32> ext_ip; int<16> client_port; }
type state = { int<32> fst; }
fun state init(pkt_type p) { return {fst = 1}; }
fun state upd(pkt_type p, state s ) { return {fst = s.fst}; }
global FoldSet.t<key> seen = FoldSet.create(sub, within(sec(60),  sec(120)), Fold(init, upd, 0) );
handle pkt_in(pkt_type p) {
    int<8> solicited = 1;
    match p.hdr.tcp.dst_port with
    | 21 -> { FoldSet.add(seen, 
                          { ext_ip = p.hdr.ipv4.dst_addr; 
                            int_ip = p.hdr.ipv4.src_addr;
                            client_port = p.hdr.tcp.src_port }); }
    | 20 -> { solicited = FoldSet.query(seen, 
                                        { ext_ip = p.hdr.ipv4.src_addr; 
                                          int_ip = p.hdr.ipv4.dst_addr;
                                          client_port = p.hdr.tcp.src_port }); }
    match solicited with 
    | 0 -> { p.ig_intr_dprsr_md.drop_ctl = 0x1; }
    | _ -> { p.ig_intr_dprsr_md.drop_ctl = 0x0; }
}
